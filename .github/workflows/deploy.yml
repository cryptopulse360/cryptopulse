name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run type checking
        run: npm run type-check

      - name: Build application
        run: npm run build

      - name: Prepare deployment files
        run: |
          # Ensure .nojekyll exists for GitHub Pages
          touch ./out/.nojekyll

          # Copy CNAME if it contains a domain (not just comments)
          if grep -q '^[^#]' ./public/CNAME 2>/dev/null; then
            cp ./public/CNAME ./out/CNAME
            echo "‚úÖ Custom domain configured from CNAME file"
          else
            echo "‚ÑπÔ∏è No custom domain configured (using GitHub Pages default)"
          fi

          # Verify build output
          echo "üìÅ Build output contents:"
          ls -la ./out/

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  lighthouse:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build for Lighthouse
        run: npm run build

      - name: Serve built files
        run: |
          npm install -g serve
          serve -s out -p 3000 &
          sleep 5

      - name: Run Lighthouse CI
        run: npx lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        timeout-minutes: 10

      - name: Verify deployment
        if: success()
        run: |
          echo "‚úÖ Deployment successful!"
          echo "üåê Site URL: ${{ steps.deployment.outputs.page_url }}"

          # Check if custom domain is configured
          if [ -f "./out/CNAME" ]; then
            CUSTOM_DOMAIN=$(cat ./out/CNAME)
            echo "üîó Custom domain: https://$CUSTOM_DOMAIN"
            echo "‚ö†Ô∏è Make sure your DNS is configured correctly"
          fi

          # Output deployment summary
          echo "üìä Deployment Summary:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
          echo "- Workflow: ${{ github.workflow }}"

      - name: Deployment failure notification
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "üîç Troubleshooting steps:"
          echo "1. Check if GitHub Pages is enabled in repository settings"
          echo "2. Verify the build output contains valid files"
          echo "3. Ensure repository has proper permissions"
          echo "4. Check for any DNS configuration issues (if using custom domain)"
          echo ""
          echo "üìã Debug information:"
          echo "- Repository: ${{ github.repository }}"
          echo "- Branch: ${{ github.ref_name }}"
          echo "- Commit: ${{ github.sha }}"
